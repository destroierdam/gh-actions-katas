name: Main workflow
on: push

env: # Set the secret as an input
  docker_username: ${{ github.actor }} 
  docker_password: ${{ secrets.GITHUB_TOKEN }} # Needs to be set to be made available to the workflow
  GIT_COMMIT: ${{ github.sha }}
  
jobs:

  SonarCloud:
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    steps:
      - name: Clone down repository
        uses: actions/checkout@v4
      - run: ci/build-app.sh
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v3.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=destroierdam
            -Dsonar.projectKey=destroierdam_gh-actions-katas
            -Dsonar.exclusions=**/*.java
  
  Snyk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/gradle-jdk11@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=app/build.gradle
  
  Build:
    runs-on: ubuntu-latest
    needs: [SonarCloud, Snyk]
    container: gradle:6-jdk11
    steps:
      - name: Clone down repository
        uses: actions/checkout@v4       
      - run: ci/build-app.sh
      - name: Test
        run: ci/unit-test-app.sh
      - name: Upload repo
        uses: actions/upload-artifact@v4
        with:
          name: code
          path: .
  
  Linting:
    runs-on: ubuntu-latest
    needs: [Build]
    container: gradle:6-jdk11
    steps:
      - name: Download repo
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .
      - name: Run linter
        uses: super-linter/super-linter/slim@v5
        env:
          DEFAULT_BRANCH : main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  Docker-image:
    runs-on: ubuntu-latest
    needs: [Build]
    permissions:
      packages: write
    steps:
      - name: Download repo
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: app
          push: true
          tags: ghcr.io/${{ github.actor }}/micronaut-app:1.0-${{ github.sha }},ghcr.io/${{ github.actor }}/micronaut-app:latest







